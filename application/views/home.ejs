<%- include('partials/_head'); %>
<%- include('partials/_header'); %>

<!-- Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@700&family=Open+Sans&display=swap" rel="stylesheet" />

<style>
  body {
    margin: 0;
    font-family: 'Open Sans', sans-serif;
    background-color: #000;
    color: #fff;
  }

  .header-banner {
    background: url('/assets/backgrounds/header-bg.png') no-repeat center center;
    background-size: cover;
    min-height: 220px;
    display: flex;
    flex-direction: column;
    justify-content: center; 
    align-items: center;   
    text-align: center;
    padding: 2rem;
    position: relative;
  }

  .header-text {
    position: relative;
    z-index: 1;
  }

  .header-text h1 {
    font-family: 'Montserrat', sans-serif;
    font-size: 2.5rem;
    font-weight: 700;
    color: white;
    margin: 0 0 0.5rem 0;
  }

  .header-text h1 span {
    color: #e50914;
  }

  .header-text .slogan {
    font-family: 'Open Sans', sans-serif;
    font-size: 0.8rem;
    font-weight: 600;
    color: #fff;
    margin: 0;
  }


  .main-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .step-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #1B1C1C;
    border-radius: 10px;
    padding: 1rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.5);
  }

  .step-content {
    flex: 1;
    margin-right: 1rem;
  }

  .step-content h2 {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  .step-content p {
    font-size: 0.85rem;
    color: #aaa;
    margin-bottom: 0.5rem;
  }

  .step-content button,
  .step-content input[type="date"] {
    background-color: #4F4F4F;
    color: #fff;
    border: none;
    padding: 0.4rem 0.8rem;
    border-radius: 5px;
    font-size: 0.85rem;
    cursor: pointer;
    margin-right: 0.5rem;
    display: inline-flex;
    align-items: center;
    gap: 5px;
  }

  .step-content input[type="date"] {
    font-family: 'Open Sans', sans-serif;
  }

  .step-img {
    width: 180px;
    height: 100px;
    background-image: url('/assets/placeholder.png');
    background-size: cover;
    background-position: center;
    border-radius: 8px;
    flex-shrink: 0;
  }

    .upload-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-top: 0.5rem;
  }

  .file-display {
    display: none;
    font-size: 0.85rem;
    color: #ccc;
    display: flex;
    align-items: center;
    gap: 5px;
  }

  .file-display img {
    width: 16px;
    height: 16px;
  }

  footer {
    margin-top: 4rem;
    padding: 2rem;
    text-align: center;
    font-size: 0.75rem;
    color: #666;
  }
</style>

<div class="header-banner">
  <div class="header-text">
    <h1><span>NETFLIX</span> Wrapped</h1>
    <p class="slogan">Discover your Netflix habits with custom timeframes and rich visual insights.</p>
  </div>
</div>

<div class="main-container">
  <!-- Step 1 -->
  <div class="step-card">
    <div class="step-content">
      <h2>1. Download data from Netflix</h2>
      <p>You must log into Netflix and download your history.</p>
      <button onclick="window.open('https://www.netflix.com/viewingactivity', '_blank')">
        Netflix View Activity
        <img src="/Assets/icons/linkTo.svg" width="16" alt="Download" />
      </button>
    </div>
    <div class="step-img"></div>
  </div>

  <!-- Step 2 -->
  <div class="step-card">
    <div class="step-content">
      <h2>2. Upload CSV</h2>
      <p>Click to choose your viewing activity CSV file.</p>
      <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
        <input type="file" id="fileInput" name="netflixData" style="display: none;" required />
        <div class="upload-row">
          <button type="button" id="uploadBtn">
            <img src="/assets/icons/upload.svg" width="16" alt="Upload" /> Upload CSV
          </button>
          <span id="fileDisplay" class="file-display" style="display: none;"></span>
          </span>
        </div>
      </form>
    </div>
    <div class="step-img"></div>
  </div>


  <!-- Step 3 -->
  <div class="step-card">
    <div class="step-content">
      <h2>3. Choose timespan</h2>
      <p>Select a date range for your wrapped summary.</p>
      <input type="date" name="startDate" />
      <input type="date" name="endDate" />
    </div>
    <div class="step-img"></div>
  </div>

  <!-- Step 4 -->
  <div class="step-card">
    <div class="step-content">
      <h2>4. Generate report</h2>
      <p>Click the button to generate your Netflix Wrapped!</p>
      <button onclick="generateReport()">
        <img src="/Assets/icons/generate.svg" width="16" alt="Generate" /> Generate Report
      </button>
    </div>
    <div class="step-img"></div>
  </div>
</div>

<footer>
  Made by WUST students for SSD project. Not affiliated with Netflix.
</footer>

<script>
  let tempFile = null;

  const fileInput = document.getElementById('fileInput');
  const uploadBtn = document.getElementById('uploadBtn');
  const fileDisplay = document.getElementById('fileDisplay');

  uploadBtn.addEventListener('click', () => {
    fileInput.click();
  });

  fileInput.addEventListener('change', () => {
    const file = fileInput.files[0];

    if (!file || file.type !== 'text/csv') {
      alert('Please upload a valid CSV file.');
      fileInput.value = ''; // clear input
      tempFile = null;
      fileDisplay.style.display = 'none';
      return;
    }

    tempFile = file;

    fileDisplay.innerHTML = `
      <img src="/assets/icons/generate.svg" width="16" alt="CSV Icon" />
      <span>${file.name}</span>
    `;
    fileDisplay.style.display = 'flex';
  });

  async function generateReport() {
    if (!tempFile) {
      alert('Please upload a CSV file first.');
      return;
    }

    const formData = new FormData();
    formData.append('netflixData', tempFile);

    try {
      const res = await fetch('/upload', {
        method: 'POST',
        body: formData
      });

      const data = await res.json();

      if (data.success) {
        window.location.href = '/waiting';
      } else {
        throw new Error(data.error || 'Upload failed.');
      }
    } catch (err) {
      console.error('Upload error:', err);
      alert('Upload failed. Please try again.');

      // Optional: tell the backend to clean up the partial upload
      await fetch('/cleanup', { method: 'POST' });

      // Reset file + UI
      tempFile = null;
      fileInput.value = '';
      fileDisplay.style.display = 'none';
    }
  }
</script>

<%- include('partials/_footer'); %>
